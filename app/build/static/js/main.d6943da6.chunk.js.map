{"version":3,"sources":["withRoot.js","components/Track/SearchTracks.js","components/Shared/AudioPlayer.js","components/Shared/Error.js","sharedQueries.js","components/Track/LikeTrack.js","components/Track/DeleteTrack.js","components/Track/UpdateTrack.js","components/Track/TrackList.js","components/Track/CreateTrack.js","components/Shared/Loading.js","pages/App.js","pages/Profile.js","components/Auth/Signout.js","components/Shared/Header.js","Root.js","components/Auth/Login.js","components/Auth/Register.js","components/Auth/index.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","palette","primary","light","blueGrey","main","dark","secondary","orange","typography","useNextVariants","withRoot","Component","props","ThemeProvider","CssBaseline","SEARCH_TRACKS_QUERY","gql","useStyles","makeStyles","root","padding","margin","spacing","unit","display","alignItems","SearchTracks","setSearchResults","classes","inputEl","useRef","useState","search","setSearch","handleSubmit","e","client","a","preventDefault","query","variables","res","data","tracks","clearSearch","current","focus","onSubmit","Paper","className","elevation","IconButton","onClick","TextField","fullWidth","placeholder","InputProps","disableUnderline","onChange","target","value","inputRef","type","AudioPlayer","url","height","width","controls","snackbar","Error","error","open","setOpen","Snackbar","action","Button","color","size","message","IS_USER_LOGGED_IN","GET_TRACKS_QUERY","GET_ME_QUERY","CREATE_LIKE_MUTATION","iconButton","icon","marginLeft","LikeTrack","trackId","likeCount","user","useContext","UserContext","useMutation","refetchQueries","createLike","stopPropagation","disabled","likeSet","findIndex","track","id","DELETE_TRACK_MUTATION","DeleteTrack","deleting","setDeleting","update","cache","response","handleUpdateCache","onCompleted","handleComplete","deleteTrack","readQuery","index","Number","slice","writeQuery","isCurrentUser","postedBy","CircularProgress","UPDATE_TRACK_MUTATION","container","flexWrap","dialog","maxWidth","textField","cancel","save","button","input","UpdateTrack","updateTrack","title","setTitle","description","setDescritpion","file","setFile","submitting","setSubmitting","fileError","setFileError","Dialog","DialogTitle","DialogContent","DialogContentText","component","FormControl","label","multiline","row","required","accept","selectedFile","files","name","htmlFor","variant","FormHelperText","DialogActions","trim","details","link","textDecoration","TrackList","List","map","Accordion","AccordionSummary","expandIcon","ListItem","likes","length","ListItemText","primaryTypographyProps","to","username","AccordionDetails","Typography","AccordionActions","CREATE_TRACK_MUTATION","fab","position","bottom","right","zIndex","CreateTrack","createTrack","concat","textAlign","progress","Loading","App","searchResults","setTracks","useQuery","loading","useEffect","GET_PROFILE","paper","marginRight","marginTop","marginBottom","breakpoints","up","card","justifyContent","audioIcon","fontSize","thumbIcon","divider","Profile","match","params","Card","CardHeader","avatar","Avatar","subheader","Date","dateJoined","toISOString","substring","trackSet","Divider","cursor","buttonIcon","Signout","handleSignout","localStorage","removeItem","isLoggedIn","flexGrow","grow","logo","faceIcon","Header","currentUser","AppBar","Toolbar","noWrap","React","createContext","fetchPolicy","Provider","me","path","exact","LOGIN_MUTATION","flexDirection","backgroundColor","form","submit","Login","setIsLogin","setUsername","password","setPassword","loginUser","setItem","tokenAuth","token","console","log","Lock","InputLabel","Input","toString","Transition","forwardRef","ref","Slide","direction","REGISTER_MUTATION","openTitle","verticalAlign","Register","email","setEmail","createUser","Gavel","disableBackdropClick","TransitionComponent","VerifiedUserTwoTone","isLogin","Boolean","window","location","hostname","InMemoryCache","httpLink","createUploadLink","uri","headers","authorization","getItem","ApolloClient","AuthCheckComponent","children","ReactDOM","render","Auth","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d6943da6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport blueGrey from \"@material-ui/core/colors/blueGrey\";\r\nimport orange from \"@material-ui/core/colors/orange\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\n// A theme with custom primary and secondary color.\r\n// It's optional.\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: blueGrey[500],\r\n      main: blueGrey[700],\r\n      dark: blueGrey[900],\r\n    },\r\n    secondary: {\r\n      light: orange[200],\r\n      main: orange[500],\r\n      dark: orange[700],\r\n    },\r\n  },\r\n  typography: {\r\n    useNextVariants: true,\r\n  },\r\n});\r\n\r\nconst withRoot = (Component) => {\r\n  const WithRoot = (props) => {\r\n    // MuiThemeProvider makes the theme available down the React tree\r\n    // thanks to React context.\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\r\n        {/* https://material-ui.com/getting-started/usage/#cssbaseline */}\r\n        <CssBaseline />\r\n        <Component {...props} />\r\n      </ThemeProvider>\r\n    );\r\n  };\r\n\r\n  return WithRoot;\r\n};\r\n\r\nexport default withRoot;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { ApolloConsumer, gql } from \"@apollo/client\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, Paper, IconButton } from \"@material-ui/core\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst SearchTracks = ({ setSearchResults }) => {\r\n  const classes = useStyles();\r\n  const inputEl = useRef(null);\r\n  const [search, setSearch] = useState(\"\");\r\n  const handleSubmit = async (e, client) => {\r\n    e.preventDefault();\r\n    const res = await client.query({\r\n      query: SEARCH_TRACKS_QUERY,\r\n      variables: { search: search },\r\n    });\r\n    setSearchResults(res.data.tracks);\r\n  };\r\n  const clearSearch = () => {\r\n    setSearchResults([]);\r\n    setSearch(\"\");\r\n    inputEl.current.focus();\r\n  };\r\n  return (\r\n    <ApolloConsumer>\r\n      {(client) => (\r\n        <form onSubmit={(e) => handleSubmit(e, client)}>\r\n          <Paper className={classes.root} elevation={1}>\r\n            <IconButton onClick={clearSearch}>\r\n              <ClearIcon />\r\n            </IconButton>\r\n            <TextField\r\n              fullWidth\r\n              placeholder=\"Search All Tracks\"\r\n              InputProps={{\r\n                disableUnderline: true,\r\n              }}\r\n              onChange={(e) => setSearch(e.target.value)}\r\n              value={search}\r\n              inputRef={inputEl}\r\n            />\r\n            <IconButton type=\"submit\">\r\n              <SearchIcon />\r\n            </IconButton>\r\n          </Paper>\r\n        </form>\r\n      )}\r\n    </ApolloConsumer>\r\n  );\r\n};\r\n\r\nconst SEARCH_TRACKS_QUERY = gql`\r\n  query($search: String) {\r\n    tracks(search: $search) {\r\n      id\r\n      title\r\n      description\r\n      url\r\n      likes {\r\n        id\r\n      }\r\n      postedBy {\r\n        id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"2px 4px\",\r\n    margin: theme.spacing.unit,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nexport default SearchTracks;\r\n","import React from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\n\r\nconst AudioPlayer = ({ url }) => (\r\n  <div>\r\n    <ReactPlayer url={url} height=\"30px\" width=\"500px\" controls={true} />\r\n  </div>\r\n);\r\n\r\nexport default AudioPlayer;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Snackbar, Button } from \"@material-ui/core\";\r\n\r\nconst Error = ({ error }) => {\r\n  const [open, setOpen] = useState(true);\r\n  const classes = useStyles();\r\n  return (\r\n    <Snackbar\r\n      open={open}\r\n      className={classes.snackbar}\r\n      action={\r\n        <Button\r\n          onClick={() => {\r\n            setOpen(false);\r\n          }}\r\n          color=\"secondary\"\r\n          size=\"small\"\r\n        >\r\n          Close\r\n        </Button>\r\n      }\r\n      message={error}\r\n    />\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  snackbar: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n}));\r\n\r\nexport default Error;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const IS_USER_LOGGED_IN = gql`\r\n  query IsUserLoggedIn {\r\n    isLoggedIn @client\r\n  }\r\n`;\r\n\r\nexport const GET_TRACKS_QUERY = gql`\r\n  query getTracksQuery {\r\n    tracks {\r\n      id\r\n      title\r\n      description\r\n      url\r\n      likes {\r\n        id\r\n      }\r\n      postedBy {\r\n        id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_ME_QUERY = gql`\r\n  {\r\n    me {\r\n      id\r\n      username\r\n      email\r\n      likeSet {\r\n        track {\r\n          id\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useContext } from \"react\";\r\nimport { useMutation, gql } from \"@apollo/client\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\nimport Error from \"../Shared/Error\";\r\nimport { GET_ME_QUERY } from \"../../sharedQueries\";\r\nimport { UserContext } from \"../../Root\";\r\n\r\nconst LikeTrack = ({ trackId, likeCount }) => {\r\n  const classes = useStyles();\r\n  const user = useContext(UserContext);\r\n  const [createLike, { error }] = useMutation(CREATE_LIKE_MUTATION, {\r\n    refetchQueries: [{ query: GET_ME_QUERY }],\r\n  });\r\n\r\n  if (error) return <Error error={error} />;\r\n\r\n  const handleDisableLikedTrack = () => {\r\n    const userLikes = user.likeSet;\r\n    const isTrackLiked =\r\n      userLikes.findIndex(({ track }) => {\r\n        return track.id === trackId;\r\n      }) > -1;\r\n    return isTrackLiked;\r\n  };\r\n\r\n  return (\r\n    <IconButton\r\n      onClick={(e) => {\r\n        e.stopPropagation();\r\n        createLike({ variables: { trackId } });\r\n      }}\r\n      className={classes.iconButton}\r\n      disabled={handleDisableLikedTrack()}\r\n    >\r\n      {likeCount}\r\n      <ThumbUpIcon className={classes.icon} />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nconst CREATE_LIKE_MUTATION = gql`\r\n  mutation($trackId: Int!) {\r\n    createLike(trackId: $trackId) {\r\n      track {\r\n        id\r\n        likes {\r\n          id\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  iconButton: {\r\n    color: \"deeppink\",\r\n  },\r\n  icon: {\r\n    marginLeft: theme.spacing.unit / 2,\r\n  },\r\n}));\r\n\r\nexport default LikeTrack;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { useMutation, gql } from \"@apollo/client\";\r\nimport { IconButton, CircularProgress } from \"@material-ui/core\";\r\nimport TrashIcon from \"@material-ui/icons/DeleteForeverOutlined\";\r\nimport Error from \"../Shared/Error\";\r\nimport { UserContext } from \"../../Root\";\r\nimport { GET_TRACKS_QUERY } from \"../../sharedQueries\";\r\n\r\nconst DeleteTrack = ({ track }) => {\r\n  const user = useContext(UserContext);\r\n  const [deleting, setDeleting] = useState(false);\r\n  const [deleteTrack, { error }] = useMutation(DELETE_TRACK_MUTATION, {\r\n    update(cache, response) {\r\n      handleUpdateCache(cache, response);\r\n    },\r\n    onCompleted() {\r\n      handleComplete();\r\n    },\r\n  });\r\n\r\n  const handleUpdateCache = (cache, { data: { deleteTrack } }) => {\r\n    const data = cache.readQuery({\r\n      query: GET_TRACKS_QUERY,\r\n    });\r\n    const index = data.tracks.findIndex(\r\n      (track) => Number(track.id) === deleteTrack.trackId\r\n    );\r\n    const tracks = [\r\n      ...data.tracks.slice(0, index),\r\n      ...data.tracks.slice(index + 1),\r\n    ];\r\n    cache.writeQuery({\r\n      query: GET_TRACKS_QUERY,\r\n      data: { tracks },\r\n    });\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    setDeleting(true);\r\n    deleteTrack({ variables: { trackId: track.id } });\r\n  };\r\n\r\n  const handleComplete = () => {\r\n    setDeleting(false);\r\n  };\r\n\r\n  const isCurrentUser = user.id === track.postedBy.id;\r\n\r\n  if (error) {\r\n    return <Error error=\"Delete Track Error\" />;\r\n  }\r\n\r\n  return (\r\n    isCurrentUser && (\r\n      <IconButton\r\n        onClick={() => {\r\n          handleDelete();\r\n        }}\r\n      >\r\n        {deleting ? <CircularProgress size={24} /> : <TrashIcon />}\r\n      </IconButton>\r\n    )\r\n  );\r\n};\r\n\r\nconst DELETE_TRACK_MUTATION = gql`\r\n  mutation($trackId: Int!) {\r\n    deleteTrack(trackId: $trackId) {\r\n      trackId\r\n    }\r\n  }\r\n`;\r\n\r\nexport default DeleteTrack;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { useMutation, gql } from \"@apollo/client\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  IconButton,\r\n  Button,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  FormControl,\r\n  FormHelperText,\r\n  DialogTitle,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\r\nimport { UserContext } from \"../../Root\";\r\nimport Error from \"../Shared/Error\";\r\n\r\nconst UpdateTrack = ({ track }) => {\r\n  const classes = useStyles();\r\n  const user = useContext(UserContext);\r\n  const [updateTrack, { error }] = useMutation(UPDATE_TRACK_MUTATION, {\r\n    onCompleted() {\r\n      handleComplete();\r\n    },\r\n  });\r\n  const [open, setOpen] = useState(false);\r\n  const [title, setTitle] = useState(track.title);\r\n  const [description, setDescritpion] = useState(track.description);\r\n  const [file, setFile] = useState(\"\");\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [fileError, setFileError] = useState(\"\");\r\n\r\n  const isCurrentUser = user.id === track.postedBy.id;\r\n\r\n  const handleAudioChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    const fileSizeLimit = 10000000; //10mb\r\n    if (selectedFile && selectedFile.size > fileSizeLimit) {\r\n      setFileError(`${selectedFile.name}: File size too large, 10mb max.`);\r\n    } else {\r\n      setFile(selectedFile);\r\n      setFileError(\"\");\r\n    }\r\n  };\r\n\r\n  const handleComplete = () => {\r\n    setOpen(false);\r\n    setSubmitting(false);\r\n    setTitle(\"\");\r\n    setDescritpion(\"\");\r\n    setFile(\"\");\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setSubmitting(true);\r\n    updateTrack({ variables: { title, description, file, trackId: track.id } });\r\n  };\r\n\r\n  if (error) {\r\n    return <Error error=\"Update Track Error\" />;\r\n  }\r\n\r\n  return (\r\n    isCurrentUser && (\r\n      <>\r\n        <IconButton\r\n          onClick={() => {\r\n            setOpen(true);\r\n          }}\r\n        >\r\n          <EditIcon />\r\n        </IconButton>\r\n        <Dialog open={open} className={classes.dialog}>\r\n          <form\r\n            onSubmit={(e) => {\r\n              handleSubmit(e);\r\n            }}\r\n          >\r\n            <DialogTitle>Update Track</DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText component=\"span\">\r\n                Update Title, Description or Audio File\r\n                <FormControl fullWidth>\r\n                  <TextField\r\n                    label=\"Title\"\r\n                    placeholder=\"Add Title\"\r\n                    className={classes.textField}\r\n                    onChange={(e) => {\r\n                      setTitle(e.target.value);\r\n                    }}\r\n                    value={title}\r\n                  />\r\n                </FormControl>\r\n                <FormControl fullWidth>\r\n                  <TextField\r\n                    multiline\r\n                    row=\"2\"\r\n                    label=\"Description\"\r\n                    placeholder=\"Add Description\"\r\n                    className={classes.textField}\r\n                    onChange={(e) => {\r\n                      setDescritpion(e.target.value);\r\n                    }}\r\n                    value={description}\r\n                  />\r\n                </FormControl>\r\n                <FormControl fullWidth error={fileError !== \"\"}>\r\n                  <input\r\n                    id=\"audio\"\r\n                    required\r\n                    type=\"file\"\r\n                    className={classes.input}\r\n                    accept=\"audio/mp3,audio/wav\"\r\n                    onChange={handleAudioChange}\r\n                  />\r\n                  <label htmlFor=\"audio\">\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color={file ? \"secondary\" : \"inherit\"}\r\n                      component=\"span\"\r\n                      className={classes.button}\r\n                    >\r\n                      Audio File\r\n                      <LibraryMusicIcon className={classes.icon} />\r\n                    </Button>\r\n                    {file && file.name}\r\n                  </label>\r\n                  <FormHelperText>{fileError}</FormHelperText>\r\n                </FormControl>\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button\r\n                onClick={() => {\r\n                  setOpen(false);\r\n                }}\r\n                className={classes.cancel}\r\n                disabled={submitting}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                disabled={\r\n                  submitting || !title.trim() || !description.trim() || !file\r\n                }\r\n                type=\"submit\"\r\n                className={classes.save}\r\n              >\r\n                {submitting ? (\r\n                  <CircularProgress size={24} className={classes.save} />\r\n                ) : (\r\n                  \"Update Track\"\r\n                )}\r\n              </Button>\r\n            </DialogActions>\r\n          </form>\r\n        </Dialog>\r\n      </>\r\n    )\r\n  );\r\n};\r\n\r\nconst UPDATE_TRACK_MUTATION = gql`\r\n  mutation(\r\n    $trackId: Int!\r\n    $title: String!\r\n    $description: String!\r\n    $file: Upload!\r\n  ) {\r\n    updateTrack(\r\n      trackId: $trackId\r\n      title: $title\r\n      description: $description\r\n      file: $file\r\n    ) {\r\n      track {\r\n        id\r\n        title\r\n        description\r\n        url\r\n        likes {\r\n          id\r\n        }\r\n        postedBy {\r\n          id\r\n          username\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  dialog: {\r\n    margin: \"0 auto\",\r\n    maxWidth: 550,\r\n  },\r\n  textField: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  cancel: {\r\n    color: \"red\",\r\n  },\r\n  save: {\r\n    color: \"green\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing.unit * 2,\r\n  },\r\n  icon: {\r\n    marginLeft: theme.spacing.unit,\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nexport default UpdateTrack;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  AccordionActions,\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport AudioPlayer from \"../Shared/AudioPlayer\";\r\nimport LikeTrack from \"./LikeTrack\";\r\nimport DeleteTrack from \"./DeleteTrack\";\r\nimport UpdateTrack from \"./UpdateTrack\";\r\n\r\nconst TrackList = ({ tracks }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <List>\r\n      {tracks.map((track) => (\r\n        <Accordion key={track.id}>\r\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n            <ListItem className={classes.root}>\r\n              <LikeTrack trackId={track.id} likeCount={track.likes.length} />\r\n              <ListItemText\r\n                primaryTypographyProps={{\r\n                  variant: \"h4\",\r\n                  color: \"primary\",\r\n                }}\r\n                primary={track.title}\r\n                secondary={\r\n                  <Link\r\n                    to={`/profile/${track.postedBy.id}`}\r\n                    className={classes.link}\r\n                  >\r\n                    {track.postedBy.username}\r\n                  </Link>\r\n                }\r\n              />\r\n              <AudioPlayer url={track.url} />\r\n            </ListItem>\r\n          </AccordionSummary>\r\n          <AccordionDetails className={classes.details}>\r\n            <Typography variant=\"body1\">{track.description}</Typography>\r\n          </AccordionDetails>\r\n          <AccordionActions>\r\n            <UpdateTrack track={track} />\r\n            <DeleteTrack track={track} />\r\n          </AccordionActions>\r\n        </Accordion>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  link: {\r\n    color: \"#424242\",\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      color: \"black\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default TrackList;\r\n","import React, { useState } from \"react\";\r\nimport { useMutation, gql } from \"@apollo/client\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  FormControl,\r\n  FormHelperText,\r\n  TextField,\r\n  Button,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\r\nimport Error from \"../Shared/Error\";\r\nimport { GET_TRACKS_QUERY } from \"../../sharedQueries\";\r\n\r\nconst CreateTrack = () => {\r\n  const classes = useStyles();\r\n  const [createTrack, { error }] = useMutation(CREATE_TRACK_MUTATION, {\r\n    update(cache, response) {\r\n      handleUpdateCache(cache, response);\r\n    },\r\n    onCompleted() {\r\n      handleComplete();\r\n    },\r\n  });\r\n  const [open, setOpen] = useState(false);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescritpion] = useState(\"\");\r\n  const [file, setFile] = useState(\"\");\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [fileError, setFileError] = useState(\"\");\r\n\r\n  const handleAudioChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    const fileSizeLimit = 10000000; //10mb\r\n    if (selectedFile && selectedFile.size > fileSizeLimit) {\r\n      setFileError(`${selectedFile.name}: File size too large, 10mb max.`);\r\n    } else {\r\n      setFile(selectedFile);\r\n      setFileError(\"\");\r\n    }\r\n  };\r\n\r\n  const handleUpdateCache = (cache, { data: { createTrack } }) => {\r\n    const data = cache.readQuery({\r\n      query: GET_TRACKS_QUERY,\r\n    });\r\n    const tracks = data.tracks.concat(createTrack.track);\r\n    cache.writeQuery({\r\n      query: GET_TRACKS_QUERY,\r\n      data: { tracks },\r\n    });\r\n  };\r\n\r\n  const handleComplete = () => {\r\n    setOpen(false);\r\n    setSubmitting(false);\r\n    setTitle(\"\");\r\n    setDescritpion(\"\");\r\n    setFile(\"\");\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setSubmitting(true);\r\n    createTrack({ variables: { title, description, file } });\r\n  };\r\n\r\n  if (error) {\r\n    return <Error error=\"Create Track Error\" />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={() => {\r\n          setOpen(true);\r\n        }}\r\n        variant=\"outlined\"\r\n        className={classes.fab}\r\n        color=\"secondary\"\r\n      >\r\n        {open ? <ClearIcon /> : <AddIcon />}\r\n      </Button>\r\n      <Dialog open={open} className={classes.dialog}>\r\n        <form\r\n          onSubmit={(e) => {\r\n            handleSubmit(e);\r\n          }}\r\n        >\r\n          <DialogTitle>Create Track</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText component=\"span\">\r\n              Add a Title, Description and Audio File\r\n              <FormControl fullWidth>\r\n                <TextField\r\n                  label=\"Title\"\r\n                  placeholder=\"Add Title\"\r\n                  className={classes.textField}\r\n                  onChange={(e) => {\r\n                    setTitle(e.target.value);\r\n                  }}\r\n                  value={title}\r\n                />\r\n              </FormControl>\r\n              <FormControl fullWidth>\r\n                <TextField\r\n                  multiline\r\n                  row=\"2\"\r\n                  label=\"Description\"\r\n                  placeholder=\"Add Description\"\r\n                  className={classes.textField}\r\n                  onChange={(e) => {\r\n                    setDescritpion(e.target.value);\r\n                  }}\r\n                  value={description}\r\n                />\r\n              </FormControl>\r\n              <FormControl fullWidth error={fileError !== \"\"}>\r\n                <input\r\n                  id=\"audio\"\r\n                  required\r\n                  type=\"file\"\r\n                  className={classes.input}\r\n                  accept=\"audio/mp3,audio/wav\"\r\n                  onChange={handleAudioChange}\r\n                />\r\n                <label htmlFor=\"audio\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color={file ? \"secondary\" : \"inherit\"}\r\n                    component=\"span\"\r\n                    className={classes.button}\r\n                  >\r\n                    Audio File\r\n                    <LibraryMusicIcon className={classes.icon} />\r\n                  </Button>\r\n                  {file && file.name}\r\n                </label>\r\n                <FormHelperText>{fileError}</FormHelperText>\r\n              </FormControl>\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={() => {\r\n                setOpen(false);\r\n              }}\r\n              className={classes.cancel}\r\n              disabled={submitting}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              disabled={\r\n                submitting || !title.trim() || !description.trim() || !file\r\n              }\r\n              type=\"submit\"\r\n              className={classes.save}\r\n            >\r\n              {submitting ? (\r\n                <CircularProgress size={24} className={classes.save} />\r\n              ) : (\r\n                \"Add Track\"\r\n              )}\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nconst CREATE_TRACK_MUTATION = gql`\r\n  mutation($title: String!, $description: String!, $file: Upload!) {\r\n    createTrack(title: $title, description: $description, file: $file) {\r\n      track {\r\n        id\r\n        title\r\n        description\r\n        url\r\n        likes {\r\n          id\r\n        }\r\n        postedBy {\r\n          id\r\n          username\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  dialog: {\r\n    margin: \"0 auto\",\r\n    maxWidth: 550,\r\n  },\r\n  textField: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  cancel: {\r\n    color: \"red\",\r\n  },\r\n  save: {\r\n    color: \"green\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing.unit * 2,\r\n  },\r\n  icon: {\r\n    marginLeft: theme.spacing.unit,\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  fab: {\r\n    position: \"fixed\",\r\n    bottom: theme.spacing.unit * 2,\r\n    right: theme.spacing.unit * 2,\r\n    zIndex: \"200\",\r\n  },\r\n}));\r\n\r\nexport default CreateTrack;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nconst Loading = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress className={classes.progress} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100vw\",\r\n    textAlign: \"center\",\r\n  },\r\n  progress: {\r\n    margin: theme.spacing.unit * 2,\r\n    color: theme.palette.secondary.dark,\r\n  },\r\n}));\r\n\r\nexport default Loading;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SearchTracks from \"../components/Track/SearchTracks\";\r\nimport TrackList from \"../components/Track/TrackList\";\r\nimport CreateTrack from \"../components/Track/CreateTrack\";\r\nimport Loading from \"../components/Shared/Loading\";\r\nimport Error from \"../components/Shared/Error\";\r\nimport { GET_TRACKS_QUERY } from \"../sharedQueries\";\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [tracks, setTracks] = useState([]);\r\n  const { loading, error, data } = useQuery(GET_TRACKS_QUERY);\r\n\r\n  useEffect(() => {\r\n    if (searchResults.length > 0) {\r\n      setTracks(searchResults);\r\n    } else if (data) {\r\n      setTracks(data.tracks);\r\n    }\r\n  }, [searchResults, data]);\r\n\r\n  if (loading) return <Loading />;\r\n  if (error) return <Error error={error} />;\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <SearchTracks setSearchResults={setSearchResults} />\r\n      <CreateTrack />\r\n      <TrackList tracks={tracks} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    margin: \"0 auto\",\r\n    maxWidth: 960,\r\n    padding: theme.spacing.unit * 2,\r\n  },\r\n}));\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useQuery, gql } from \"@apollo/client\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Avatar,\r\n  Paper,\r\n  Typography,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\nimport AudiotrackIcon from \"@material-ui/icons/Audiotrack\";\r\nimport AudioPlayer from \"../components/Shared/AudioPlayer\";\r\nimport Error from \"../components/Shared/Error\";\r\nimport Loading from \"../components/Shared/Loading\";\r\n\r\nconst Profile = ({ match }) => {\r\n  const classes = useStyles();\r\n  const { loading, error, data } = useQuery(GET_PROFILE, {\r\n    variables: { id: match.params.id },\r\n  });\r\n  if (loading) return <Loading />;\r\n  if (error) return <Error error={error} />;\r\n  return (\r\n    <div>\r\n      <Card className={classes.card}>\r\n        <CardHeader\r\n          avatar={<Avatar>{data.user.username[0]}</Avatar>}\r\n          title={data.user.username}\r\n          subheader={`Joined ${new Date(data.user.dateJoined)\r\n            .toISOString()\r\n            .substring(0, 10)}`}\r\n        />\r\n      </Card>\r\n      <Paper elevation={1} className={classes.paper}>\r\n        <Typography variant=\"subtitle1\" className={classes.title}>\r\n          <AudiotrackIcon className={classes.audioIcon} />\r\n          Created Tracks\r\n        </Typography>\r\n        {data.user.trackSet.map((track) => (\r\n          <div key={track.id}>\r\n            <Typography>\r\n              {track.title} - {track.likes.length} Likes\r\n            </Typography>\r\n            <AudioPlayer url={track.url} />\r\n            <Divider className={classes.divider} />\r\n          </div>\r\n        ))}\r\n      </Paper>\r\n      <Paper elevation={1} className={classes.paper}>\r\n        <Typography variant=\"subtitle1\" className={classes.title}>\r\n          <ThumbUpIcon className={classes.thumbIcon} />\r\n          Liked Tracks\r\n        </Typography>\r\n        {data.user.likeSet.map(({ track }) => {\r\n          return (\r\n            <div key={track.id}>\r\n              <Typography>\r\n                {track.title} - {track.likes.length} Likes -{\" \"}\r\n                {track.postedBy.username}\r\n              </Typography>\r\n              <AudioPlayer url={track.url} />\r\n              <Divider className={classes.divider} />\r\n            </div>\r\n          );\r\n        })}\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst GET_PROFILE = gql`\r\n  query($id: Int!) {\r\n    user(id: $id) {\r\n      id\r\n      username\r\n      dateJoined\r\n      trackSet {\r\n        id\r\n        title\r\n        url\r\n        likes {\r\n          id\r\n        }\r\n      }\r\n      likeSet {\r\n        id\r\n        track {\r\n          id\r\n          title\r\n          url\r\n          likes {\r\n            id\r\n          }\r\n          postedBy {\r\n            id\r\n            username\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    width: \"auto\",\r\n    display: \"block\",\r\n    padding: theme.spacing.unit * 2,\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    marginTop: theme.spacing.unit * 2,\r\n    marginBottom: theme.spacing.unit * 2,\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: 650,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  card: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  title: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginBottom: theme.spacing.unit * 2,\r\n  },\r\n  audioIcon: {\r\n    color: \"purple\",\r\n    fontSize: 30,\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  thumbIcon: {\r\n    color: \"green\",\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  divider: {\r\n    marginTop: theme.spacing.unit,\r\n    marginBottom: theme.spacing.unit,\r\n  },\r\n}));\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { ApolloConsumer } from \"@apollo/client\";\r\nimport { IS_USER_LOGGED_IN } from \"../../sharedQueries\";\r\nimport ExitToApp from \"@material-ui/icons/ExitToApp\";\r\nimport { Typography, Button } from \"@material-ui/core\";\r\n\r\nconst Signout = () => {\r\n  const classes = useStyles();\r\n  const handleSignout = async (client) => {\r\n    localStorage.removeItem(\"authToken\");\r\n    client.writeQuery({\r\n      query: IS_USER_LOGGED_IN,\r\n      data: {\r\n        isLoggedIn: false,\r\n      },\r\n    });\r\n  };\r\n  return (\r\n    <ApolloConsumer>\r\n      {(client) => (\r\n        <Button\r\n          onClick={() => {\r\n            handleSignout(client);\r\n          }}\r\n        >\r\n          <Typography\r\n            variant=\"body1\"\r\n            className={classes.buttonIcon}\r\n            color=\"secondary\"\r\n          >\r\n            Signout\r\n          </Typography>\r\n          <ExitToApp className={classes.buttonIcon} color=\"secondary\" />\r\n        </Button>\r\n      )}\r\n    </ApolloConsumer>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    cursor: \"pointer\",\r\n    display: \"flex\",\r\n  },\r\n  buttonIcon: {\r\n    marginLeft: \"5px\",\r\n  },\r\n}));\r\n\r\nexport default Signout;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\";\r\nimport RadioIcon from \"@material-ui/icons/Radio\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Signout from \"../Auth/Signout\";\r\n\r\nconst Header = ({ currentUser }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <AppBar position=\"static\" className={classes.root}>\r\n      <Toolbar>\r\n        <Link to=\"/\" className={classes.grow}>\r\n          <RadioIcon className={classes.logo} color=\"secondary\" />\r\n          <Typography variant=\"h3\" color=\"secondary\" noWrap>\r\n            Musicallen\r\n          </Typography>\r\n        </Link>\r\n        {currentUser && (\r\n          <Link to={`/profile/${currentUser.id}`} className={classes.grow}>\r\n            <AccountCircleIcon className={classes.faceIcon} />\r\n            <Typography variant=\"h3\" className={classes.username} noWrap>\r\n              {currentUser.username}\r\n            </Typography>\r\n          </Link>\r\n        )}\r\n        <Signout />\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    textDecoration: \"none\",\r\n  },\r\n  logo: {\r\n    marginRight: theme.spacing.unit,\r\n    fontSize: 45,\r\n  },\r\n  faceIcon: {\r\n    marginRight: theme.spacing.unit,\r\n    fontSize: 30,\r\n    color: \"white\",\r\n  },\r\n  username: {\r\n    color: \"white\",\r\n    fontSize: 30,\r\n  },\r\n}));\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport withRoot from \"./withRoot\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport App from \"./pages/App\";\r\nimport Profile from \"./pages/Profile\";\r\nimport Header from \"./components/Shared/Header\";\r\nimport Loading from \"./components/Shared/Loading\";\r\nimport Error from \"./components/Shared/Error\";\r\nimport { GET_ME_QUERY } from \"./sharedQueries\";\r\n\r\nexport const UserContext = React.createContext();\r\n\r\nconst Root = () => {\r\n  const { loading, error, data } = useQuery(GET_ME_QUERY, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  if (loading) return <Loading />;\r\n  if (error) return <Error error={error} />;\r\n  return (\r\n    <Router>\r\n      <UserContext.Provider value={data.me}>\r\n        <Header currentUser={data.me} />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={App} />\r\n          <Route path=\"/profile/:id\" component={Profile} />\r\n        </Switch>\r\n      </UserContext.Provider>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default withRoot(Root);\r\n","import React, { useState } from \"react\";\r\nimport { useMutation, gql } from \"@apollo/client\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Typography,\r\n  Avatar,\r\n  FormControl,\r\n  Paper,\r\n  Input,\r\n  InputLabel,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { Lock } from \"@material-ui/icons\";\r\nimport Error from \"../Shared/Error\";\r\nimport { IS_USER_LOGGED_IN } from \"../../sharedQueries\";\r\n\r\nconst Login = ({ setIsLogin }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const classes = useStyles();\r\n  const [loginUser, { loading, error, client }] = useMutation(LOGIN_MUTATION);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await loginUser({\r\n        variables: { password, username },\r\n      });\r\n      localStorage.setItem(\"authToken\", res.data.tokenAuth.token);\r\n      client.writeQuery({\r\n        query: IS_USER_LOGGED_IN,\r\n        data: { isLoggedIn: true },\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <Lock />\r\n        </Avatar>\r\n        <Typography variant=\"h4\">Login as Existing User</Typography>\r\n        <form\r\n          className={classes.form}\r\n          onSubmit={(e) => {\r\n            handleSubmit(e);\r\n          }}\r\n        >\r\n          <FormControl margin=\"normal\" required fullWidth>\r\n            <InputLabel htmlFor=\"username\">Username</InputLabel>\r\n            <Input\r\n              id=\"username\"\r\n              onChange={(e) => {\r\n                setUsername(e.target.value);\r\n              }}\r\n            />\r\n          </FormControl>\r\n          <FormControl margin=\"normal\" required fullWidth>\r\n            <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n            <Input\r\n              id=\"password\"\r\n              type=\"password\"\r\n              onChange={(e) => {\r\n                setPassword(e.target.value);\r\n              }}\r\n            />\r\n          </FormControl>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            disabled={loading || !username.trim() || !password.trim()}\r\n            className={classes.submit}\r\n          >\r\n            {loading ? \"Logging in...\" : \"Login\"}\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              setIsLogin(false);\r\n            }}\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n          >\r\n            New user? Register here.\r\n          </Button>\r\n          {loading && <p>Loading...</p>}\r\n          {error && <Error error={error.toString()} />}\r\n        </form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst LOGIN_MUTATION = gql`\r\n  mutation($username: String!, $password: String!) {\r\n    tokenAuth(username: $username, password: $password) {\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"auto\",\r\n    display: \"block\",\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: 400,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing.unit * 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing.unit * 2,\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing.unit * 2,\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing.unit,\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing.unit,\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing.unit * 2,\r\n    marginBottom: theme.spacing.unit * 2,\r\n  },\r\n}));\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { useMutation, gql } from \"@apollo/client\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Typography,\r\n  Avatar,\r\n  FormControl,\r\n  Paper,\r\n  Input,\r\n  InputLabel,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Slide,\r\n} from \"@material-ui/core\";\r\nimport { Gavel, VerifiedUserTwoTone } from \"@material-ui/icons\";\r\nimport Error from \"../Shared/Error\";\r\n\r\nconst Transition = React.forwardRef((props, ref) => {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst Register = ({ setIsLogin }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n  const classes = useStyles();\r\n  const [createUser, { loading, error }] = useMutation(REGISTER_MUTATION);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await createUser({\r\n        variables: { email, password, username },\r\n      });\r\n      setOpen(true);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <Gavel />\r\n        </Avatar>\r\n        <Typography variant=\"h4\">Register</Typography>\r\n        <form\r\n          className={classes.form}\r\n          onSubmit={(e) => {\r\n            handleSubmit(e);\r\n          }}\r\n        >\r\n          <FormControl margin=\"normal\" required fullWidth>\r\n            <InputLabel htmlFor=\"username\">Username</InputLabel>\r\n            <Input\r\n              id=\"username\"\r\n              onChange={(e) => {\r\n                setUsername(e.target.value);\r\n              }}\r\n            />\r\n          </FormControl>\r\n          <FormControl margin=\"normal\" required fullWidth>\r\n            <InputLabel htmlFor=\"email\">Email</InputLabel>\r\n            <Input\r\n              id=\"email\"\r\n              type=\"email\"\r\n              onChange={(e) => {\r\n                setEmail(e.target.value);\r\n              }}\r\n            />\r\n          </FormControl>\r\n          <FormControl margin=\"normal\" required fullWidth>\r\n            <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n            <Input\r\n              id=\"password\"\r\n              type=\"password\"\r\n              onChange={(e) => {\r\n                setPassword(e.target.value);\r\n              }}\r\n            />\r\n          </FormControl>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            disabled={\r\n              loading || !username.trim() || !email.trim() || !password.trim()\r\n            }\r\n            className={classes.submit}\r\n          >\r\n            {loading ? \"Registering...\" : \"Register\"}\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              setIsLogin(true);\r\n            }}\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n          >\r\n            Previous user? Login in here.\r\n          </Button>\r\n          {loading && <p>Loading...</p>}\r\n          {error && <Error error={error.toString()} />}\r\n        </form>\r\n      </Paper>\r\n      {/***Success Dialog***/}\r\n      <Dialog disableBackdropClick open={open} TransitionComponent={Transition}>\r\n        <DialogTitle>\r\n          <VerifiedUserTwoTone className={classes.icon} />\r\n          New Account\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            User {username} successfully created!\r\n          </DialogContentText>\r\n          <DialogActions>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={() => {\r\n                setIsLogin(true);\r\n              }}\r\n            >\r\n              Login\r\n            </Button>\r\n            {/***Error ***/}\r\n            {error && <div>Error</div>}\r\n          </DialogActions>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst REGISTER_MUTATION = gql`\r\n  mutation($username: String!, $email: String!, $password: String!) {\r\n    createUser(username: $username, email: $email, password: $password) {\r\n      user {\r\n        username\r\n        email\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"auto\",\r\n    display: \"block\",\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: 400,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing.unit * 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing.unit * 2,\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing.unit * 2,\r\n    color: theme.palette.openTitle,\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing.unit,\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing.unit,\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing.unit * 2,\r\n    marginBottom: theme.spacing.unit * 2,\r\n  },\r\n  icon: {\r\n    padding: \"0px 2px 2px 0px\",\r\n    verticalAlign: \"middle\",\r\n    color: \"green\",\r\n  },\r\n}));\r\n\r\nexport default Register;\r\n","import React, { useState } from \"react\";\r\n\r\nimport withRoot from \"../../withRoot\";\r\nimport Login from \"./Login\";\r\nimport Register from \"./Register\";\r\n\r\nexport default withRoot(() => {\r\n  const [isLogin, setIsLogin] = useState(false);\r\n  return isLogin ? (\r\n    <Login setIsLogin={setIsLogin} />\r\n  ) : (\r\n    <Register setIsLogin={setIsLogin} />\r\n  );\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Root from \"./Root\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { IS_USER_LOGGED_IN } from \"./sharedQueries\";\r\nimport Auth from \"./components/Auth\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { ApolloProvider, ApolloClient, InMemoryCache } from \"@apollo/client\";\r\nimport { createUploadLink } from \"apollo-upload-client\";\r\n\r\nconst cache = new InMemoryCache();\r\nconst httpLink = createUploadLink({\r\n  uri: \"http://localhost:1337/graphql/\",\r\n  headers: {\r\n    authorization: localStorage.getItem(\"authToken\")\r\n      ? `JWT ${localStorage.getItem(\"authToken\")}`\r\n      : \"\",\r\n  },\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: httpLink,\r\n  cache,\r\n});\r\n\r\ncache.writeQuery({\r\n  query: IS_USER_LOGGED_IN,\r\n  data: {\r\n    isLoggedIn: !!localStorage.getItem(\"authToken\"),\r\n  },\r\n});\r\n\r\nconst AuthCheckComponent = (props) => {\r\n  const { data } = useQuery(IS_USER_LOGGED_IN);\r\n  return data.isLoggedIn ? <Root /> : props.children;\r\n};\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <AuthCheckComponent>\r\n      <Auth />\r\n    </AuthCheckComponent>\r\n  </ApolloProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}