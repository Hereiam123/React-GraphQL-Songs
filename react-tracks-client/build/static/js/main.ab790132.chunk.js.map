{"version":3,"sources":["withRoot.js","components/Track/SearchTracks.js","components/Shared/AudioPlayer.js","components/Shared/Error.js","sharedQueries.js","components/Track/LikeTrack.js","components/Track/DeleteTrack.js","cloudinaryApi.js","components/Track/UpdateTrack.js","components/Track/TrackList.js","components/Track/CreateTrack.js","components/Shared/Loading.js","pages/App.js","pages/Profile.js","components/Auth/Signout.js","components/Shared/Header.js","Root.js","components/Auth/Login.js","components/Auth/Register.js","components/Auth/index.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","palette","primary","light","blueGrey","main","dark","secondary","orange","typography","useNextVariants","withRoot","Component","props","ThemeProvider","CssBaseline","SEARCH_TRACKS_QUERY","gql","useStyles","makeStyles","root","padding","margin","spacing","unit","display","alignItems","SearchTracks","setSearchResults","classes","inputEl","useRef","useState","search","setSearch","handleSubmit","e","client","a","preventDefault","query","variables","res","data","tracks","clearSearch","current","focus","onSubmit","Paper","className","elevation","IconButton","onClick","TextField","fullWidth","placeholder","InputProps","disableUnderline","onChange","target","value","inputRef","type","AudioPlayer","url","height","width","controls","snackbar","Error","error","open","setOpen","Snackbar","action","Button","color","size","message","IS_USER_LOGGED_IN","GET_TRACKS_QUERY","GET_ME_QUERY","CREATE_LIKE_MUTATION","iconButton","icon","marginLeft","LikeTrack","trackId","likeCount","user","useContext","UserContext","useMutation","refetchQueries","createLike","stopPropagation","disabled","likeSet","findIndex","track","id","DELETE_TRACK_MUTATION","DeleteTrack","update","cache","response","handleUpdateCache","deleteTrack","readQuery","index","Number","slice","writeQuery","postedBy","cloudUrl","cloudName","cloudPreset","UPDATE_TRACK_MUTATION","container","flexWrap","dialog","maxWidth","textField","cancel","save","button","input","UpdateTrack","onCompleted","handleComplete","updateTrack","title","setTitle","description","setDescritpion","file","setFile","submitting","setSubmitting","fileError","setFileError","isCurrentUser","handleAudioUpload","FormData","append","axios","post","console","Dialog","DialogTitle","DialogContent","DialogContentText","component","FormControl","label","multiline","row","required","accept","selectedFile","files","name","htmlFor","variant","FormHelperText","DialogActions","trim","CircularProgress","details","link","textDecoration","TrackList","List","map","Accordion","AccordionSummary","expandIcon","ListItem","likes","length","ListItemText","primaryTypographyProps","to","username","AccordionDetails","Typography","AccordionActions","CREATE_TRACK_MUTATION","fab","position","bottom","right","zIndex","CreateTrack","createTrack","concat","textAlign","progress","Loading","App","searchResults","setTracks","useQuery","loading","useEffect","GET_PROFILE","paper","marginRight","marginTop","marginBottom","breakpoints","up","card","justifyContent","audioIcon","fontSize","thumbIcon","divider","Profile","match","params","Card","CardHeader","avatar","Avatar","subheader","Date","dateJoined","toISOString","substring","trackSet","Divider","cursor","buttonIcon","Signout","handleSignout","localStorage","removeItem","isLoggedIn","flexGrow","grow","logo","faceIcon","Header","currentUser","AppBar","Toolbar","noWrap","React","createContext","fetchPolicy","Provider","me","path","exact","LOGIN_MUTATION","flexDirection","backgroundColor","form","submit","Login","setIsLogin","setUsername","password","setPassword","loginUser","setItem","tokenAuth","token","log","Lock","InputLabel","Input","toString","Transition","forwardRef","ref","Slide","direction","REGISTER_MUTATION","openTitle","verticalAlign","Register","email","setEmail","createUser","Gavel","disableBackdropClick","TransitionComponent","VerifiedUserTwoTone","isLogin","Boolean","window","location","hostname","InMemoryCache","httpLink","createHttpLink","uri","authLink","setContext","_","headers","getItem","authorization","ApolloClient","AuthCheckComponent","children","ReactDOM","render","Auth","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ab790132.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport blueGrey from \"@material-ui/core/colors/blueGrey\";\r\nimport orange from \"@material-ui/core/colors/orange\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\n// A theme with custom primary and secondary color.\r\n// It's optional.\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: blueGrey[500],\r\n      main: blueGrey[700],\r\n      dark: blueGrey[900],\r\n    },\r\n    secondary: {\r\n      light: orange[200],\r\n      main: orange[500],\r\n      dark: orange[700],\r\n    },\r\n  },\r\n  typography: {\r\n    useNextVariants: true,\r\n  },\r\n});\r\n\r\nconst withRoot = (Component) => {\r\n  const WithRoot = (props) => {\r\n    // MuiThemeProvider makes the theme available down the React tree\r\n    // thanks to React context.\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\r\n        {/* https://material-ui.com/getting-started/usage/#cssbaseline */}\r\n        <CssBaseline />\r\n        <Component {...props} />\r\n      </ThemeProvider>\r\n    );\r\n  };\r\n\r\n  return WithRoot;\r\n};\r\n\r\nexport default withRoot;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { ApolloConsumer, gql } from \"@apollo/client\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, Paper, IconButton } from \"@material-ui/core\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst SearchTracks = ({ setSearchResults }) => {\r\n  const classes = useStyles();\r\n  const inputEl = useRef(null);\r\n  const [search, setSearch] = useState(\"\");\r\n  const handleSubmit = async (e, client) => {\r\n    e.preventDefault();\r\n    const res = await client.query({\r\n      query: SEARCH_TRACKS_QUERY,\r\n      variables: { search: search },\r\n    });\r\n    setSearchResults(res.data.tracks);\r\n  };\r\n  const clearSearch = () => {\r\n    setSearchResults([]);\r\n    setSearch(\"\");\r\n    inputEl.current.focus();\r\n  };\r\n  return (\r\n    <ApolloConsumer>\r\n      {(client) => (\r\n        <form onSubmit={(e) => handleSubmit(e, client)}>\r\n          <Paper className={classes.root} elevation={1}>\r\n            <IconButton onClick={clearSearch}>\r\n              <ClearIcon />\r\n            </IconButton>\r\n            <TextField\r\n              fullWidth\r\n              placeholder=\"Search All Tracks\"\r\n              InputProps={{\r\n                disableUnderline: true,\r\n              }}\r\n              onChange={(e) => setSearch(e.target.value)}\r\n              value={search}\r\n              inputRef={inputEl}\r\n            />\r\n            <IconButton type=\"submit\">\r\n              <SearchIcon />\r\n            </IconButton>\r\n          </Paper>\r\n        </form>\r\n      )}\r\n    </ApolloConsumer>\r\n  );\r\n};\r\n\r\nconst SEARCH_TRACKS_QUERY = gql`\r\n  query($search: String) {\r\n    tracks(search: $search) {\r\n      id\r\n      title\r\n      description\r\n      url\r\n      likes {\r\n        id\r\n      }\r\n      postedBy {\r\n        id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"2px 4px\",\r\n    margin: theme.spacing.unit,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nexport default SearchTracks;\r\n","import React from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\n\r\nconst AudioPlayer = ({ url }) => (\r\n  <div>\r\n    <ReactPlayer url={url} height=\"30px\" width=\"500px\" controls={true} />\r\n  </div>\r\n);\r\n\r\nexport default AudioPlayer;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Snackbar, Button } from \"@material-ui/core\";\r\n\r\nconst Error = ({ error }) => {\r\n  const [open, setOpen] = useState(true);\r\n  const classes = useStyles();\r\n  return (\r\n    <Snackbar\r\n      open={open}\r\n      className={classes.snackbar}\r\n      action={\r\n        <Button\r\n          onClick={() => {\r\n            setOpen(false);\r\n          }}\r\n          color=\"secondary\"\r\n          size=\"small\"\r\n        >\r\n          Close\r\n        </Button>\r\n      }\r\n      message={error}\r\n    />\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  snackbar: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n}));\r\n\r\nexport default Error;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const IS_USER_LOGGED_IN = gql`\r\n  query IsUserLoggedIn {\r\n    isLoggedIn @client\r\n  }\r\n`;\r\n\r\nexport const GET_TRACKS_QUERY = gql`\r\n  query getTracksQuery {\r\n    tracks {\r\n      id\r\n      title\r\n      description\r\n      url\r\n      likes {\r\n        id\r\n      }\r\n      postedBy {\r\n        id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_ME_QUERY = gql`\r\n  {\r\n    me {\r\n      id\r\n      username\r\n      email\r\n      likeSet {\r\n        track {\r\n          id\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useContext } from \"react\";\r\nimport { useMutation, gql } from \"@apollo/client\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\nimport Error from \"../Shared/Error\";\r\nimport { GET_ME_QUERY } from \"../../sharedQueries\";\r\nimport { UserContext } from \"../../Root\";\r\n\r\nconst LikeTrack = ({ trackId, likeCount }) => {\r\n  const classes = useStyles();\r\n  const user = useContext(UserContext);\r\n  const [createLike, { error }] = useMutation(CREATE_LIKE_MUTATION, {\r\n    refetchQueries: [{ query: GET_ME_QUERY }],\r\n  });\r\n\r\n  if (error) return <Error error={error} />;\r\n\r\n  const handleDisableLikedTrack = () => {\r\n    const userLikes = user.likeSet;\r\n    const isTrackLiked =\r\n      userLikes.findIndex(({ track }) => {\r\n        return track.id === trackId;\r\n      }) > -1;\r\n    return isTrackLiked;\r\n  };\r\n\r\n  return (\r\n    <IconButton\r\n      onClick={(e) => {\r\n        e.stopPropagation();\r\n        createLike({ variables: { trackId } });\r\n      }}\r\n      className={classes.iconButton}\r\n      disabled={handleDisableLikedTrack()}\r\n    >\r\n      {likeCount}\r\n      <ThumbUpIcon className={classes.icon} />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nconst CREATE_LIKE_MUTATION = gql`\r\n  mutation($trackId: Int!) {\r\n    createLike(trackId: $trackId) {\r\n      track {\r\n        id\r\n        likes {\r\n          id\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  iconButton: {\r\n    color: \"deeppink\",\r\n  },\r\n  icon: {\r\n    marginLeft: theme.spacing.unit / 2,\r\n  },\r\n}));\r\n\r\nexport default LikeTrack;\r\n","import React, { useContext } from \"react\";\r\nimport { useMutation, gql } from \"@apollo/client\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport TrashIcon from \"@material-ui/icons/DeleteForeverOutlined\";\r\nimport Error from \"../Shared/Error\";\r\nimport { UserContext } from \"../../Root\";\r\nimport { GET_TRACKS_QUERY } from \"../../sharedQueries\";\r\n\r\nconst DeleteTrack = ({ track }) => {\r\n  const user = useContext(UserContext);\r\n  const [deleteTrack, { error }] = useMutation(DELETE_TRACK_MUTATION, {\r\n    update(cache, response) {\r\n      handleUpdateCache(cache, response);\r\n    },\r\n  });\r\n\r\n  if (error) return <Error error={error} />;\r\n\r\n  const handleUpdateCache = (cache, { data: { deleteTrack } }) => {\r\n    const data = cache.readQuery({\r\n      query: GET_TRACKS_QUERY,\r\n    });\r\n    const index = data.tracks.findIndex(\r\n      (track) => Number(track.id) === deleteTrack.trackId\r\n    );\r\n    const tracks = [\r\n      ...data.tracks.slice(0, index),\r\n      ...data.tracks.slice(index + 1),\r\n    ];\r\n    cache.writeQuery({\r\n      query: GET_TRACKS_QUERY,\r\n      data: { tracks },\r\n    });\r\n  };\r\n\r\n  const isCurrentUser = user.id === track.postedBy.id;\r\n\r\n  return (\r\n    isCurrentUser && (\r\n      <IconButton\r\n        onClick={() => {\r\n          deleteTrack({ variables: { trackId: track.id } });\r\n        }}\r\n      >\r\n        <TrashIcon />\r\n      </IconButton>\r\n    )\r\n  );\r\n};\r\n\r\nconst DELETE_TRACK_MUTATION = gql`\r\n  mutation($trackId: Int!) {\r\n    deleteTrack(trackId: $trackId) {\r\n      trackId\r\n    }\r\n  }\r\n`;\r\n\r\nexport default DeleteTrack;\r\n","export const cloudUrl =\r\n  \"https://api.cloudinary.com/v1_1/de-maio-design/raw/upload\";\r\nexport const cloudName = \"de-maio-design\";\r\nexport const cloudPreset = \"graphene-music\";\r\n","import React, { useState, useContext } from \"react\";\r\nimport { useMutation, gql } from \"@apollo/client\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  IconButton,\r\n  Button,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  FormControl,\r\n  FormHelperText,\r\n  DialogTitle,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\r\nimport { UserContext } from \"../../Root\";\r\nimport Error from \"../Shared/Error\";\r\nimport { cloudUrl, cloudName, cloudPreset } from \"../../cloudinaryApi\";\r\n\r\nconst UpdateTrack = ({ track }) => {\r\n  const classes = useStyles();\r\n  const user = useContext(UserContext);\r\n  const [updateTrack, { error }] = useMutation(UPDATE_TRACK_MUTATION, {\r\n    onCompleted() {\r\n      handleComplete();\r\n    },\r\n  });\r\n  const [open, setOpen] = useState(false);\r\n  const [title, setTitle] = useState(track.title);\r\n  const [description, setDescritpion] = useState(track.description);\r\n  const [file, setFile] = useState(\"\");\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [fileError, setFileError] = useState(\"\");\r\n\r\n  if (error) return <Error error={error} />;\r\n\r\n  const isCurrentUser = user.id === track.postedBy.id;\r\n\r\n  const handleAudioChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    const fileSizeLimit = 10000000; //10mb\r\n    if (selectedFile && selectedFile.size > fileSizeLimit) {\r\n      setFileError(`${selectedFile.name}: File size too large, 10mb max.`);\r\n    } else {\r\n      setFile(selectedFile);\r\n      setFileError(\"\");\r\n    }\r\n  };\r\n\r\n  const handleAudioUpload = async () => {\r\n    const data = new FormData();\r\n    try {\r\n      data.append(\"file\", file);\r\n      data.append(\"resource_type\", \"raw\");\r\n      data.append(\"upload_preset\", cloudPreset);\r\n      data.append(\"cloud_name\", cloudName);\r\n      const res = await axios.post(cloudUrl, data);\r\n      return res.data.url;\r\n    } catch (e) {\r\n      console.error(\"Error with cloudinary \" + e);\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleComplete = () => {\r\n    setOpen(false);\r\n    setSubmitting(false);\r\n    setTitle(\"\");\r\n    setDescritpion(\"\");\r\n    setFile(\"\");\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setSubmitting(true);\r\n    const url = await handleAudioUpload();\r\n    updateTrack({ variables: { title, description, url, trackId: track.id } });\r\n  };\r\n\r\n  return (\r\n    isCurrentUser && (\r\n      <>\r\n        <IconButton\r\n          onClick={() => {\r\n            setOpen(true);\r\n          }}\r\n        >\r\n          <EditIcon />\r\n        </IconButton>\r\n        <Dialog open={open} className={classes.dialog}>\r\n          <form\r\n            onSubmit={(e) => {\r\n              handleSubmit(e);\r\n            }}\r\n          >\r\n            <DialogTitle>Update Track</DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText component=\"span\">\r\n                Update Title, Description or Audio File\r\n                <FormControl fullWidth>\r\n                  <TextField\r\n                    label=\"Title\"\r\n                    placeholder=\"Add Title\"\r\n                    className={classes.textField}\r\n                    onChange={(e) => {\r\n                      setTitle(e.target.value);\r\n                    }}\r\n                    value={title}\r\n                  />\r\n                </FormControl>\r\n                <FormControl fullWidth>\r\n                  <TextField\r\n                    multiline\r\n                    row=\"2\"\r\n                    label=\"Description\"\r\n                    placeholder=\"Add Description\"\r\n                    className={classes.textField}\r\n                    onChange={(e) => {\r\n                      setDescritpion(e.target.value);\r\n                    }}\r\n                    value={description}\r\n                  />\r\n                </FormControl>\r\n                <FormControl fullWidth error={fileError !== \"\"}>\r\n                  <input\r\n                    id=\"audio\"\r\n                    required\r\n                    type=\"file\"\r\n                    className={classes.input}\r\n                    accept=\"audio/mp3,audio/wav\"\r\n                    onChange={handleAudioChange}\r\n                  />\r\n                  <label htmlFor=\"audio\">\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color={file ? \"secondary\" : \"inherit\"}\r\n                      component=\"span\"\r\n                      className={classes.button}\r\n                    >\r\n                      Audio File\r\n                      <LibraryMusicIcon className={classes.icon} />\r\n                    </Button>\r\n                    {file && file.name}\r\n                  </label>\r\n                  <FormHelperText>{fileError}</FormHelperText>\r\n                </FormControl>\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button\r\n                onClick={() => {\r\n                  setOpen(false);\r\n                }}\r\n                className={classes.cancel}\r\n                disabled={submitting}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                disabled={\r\n                  submitting || !title.trim() || !description.trim() || !file\r\n                }\r\n                type=\"submit\"\r\n                className={classes.save}\r\n              >\r\n                {submitting ? (\r\n                  <CircularProgress size={24} className={classes.save} />\r\n                ) : (\r\n                  \"Update Track\"\r\n                )}\r\n              </Button>\r\n            </DialogActions>\r\n          </form>\r\n        </Dialog>\r\n      </>\r\n    )\r\n  );\r\n};\r\n\r\nconst UPDATE_TRACK_MUTATION = gql`\r\n  mutation(\r\n    $trackId: Int!\r\n    $title: String!\r\n    $description: String!\r\n    $url: String!\r\n  ) {\r\n    updateTrack(\r\n      trackId: $trackId\r\n      title: $title\r\n      description: $description\r\n      url: $url\r\n    ) {\r\n      track {\r\n        id\r\n        title\r\n        description\r\n        url\r\n        likes {\r\n          id\r\n        }\r\n        postedBy {\r\n          id\r\n          username\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  dialog: {\r\n    margin: \"0 auto\",\r\n    maxWidth: 550,\r\n  },\r\n  textField: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  cancel: {\r\n    color: \"red\",\r\n  },\r\n  save: {\r\n    color: \"green\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing.unit * 2,\r\n  },\r\n  icon: {\r\n    marginLeft: theme.spacing.unit,\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nexport default UpdateTrack;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  AccordionActions,\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport AudioPlayer from \"../Shared/AudioPlayer\";\r\nimport LikeTrack from \"./LikeTrack\";\r\nimport DeleteTrack from \"./DeleteTrack\";\r\nimport UpdateTrack from \"./UpdateTrack\";\r\n\r\nconst TrackList = ({ tracks }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <List>\r\n      {tracks.map((track) => (\r\n        <Accordion key={track.id}>\r\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n            <ListItem className={classes.root}>\r\n              <LikeTrack trackId={track.id} likeCount={track.likes.length} />\r\n              <ListItemText\r\n                primaryTypographyProps={{\r\n                  variant: \"h4\",\r\n                  color: \"primary\",\r\n                }}\r\n                primary={track.title}\r\n                secondary={\r\n                  <Link\r\n                    to={`/profile/${track.postedBy.id}`}\r\n                    className={classes.link}\r\n                  >\r\n                    {track.postedBy.username}\r\n                  </Link>\r\n                }\r\n              />\r\n              <AudioPlayer url={track.url} />\r\n            </ListItem>\r\n          </AccordionSummary>\r\n          <AccordionDetails className={classes.details}>\r\n            <Typography variant=\"body1\">{track.description}</Typography>\r\n          </AccordionDetails>\r\n          <AccordionActions>\r\n            <UpdateTrack track={track} />\r\n            <DeleteTrack track={track} />\r\n          </AccordionActions>\r\n        </Accordion>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  link: {\r\n    color: \"#424242\",\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      color: \"black\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default TrackList;\r\n","import React, { useState } from \"react\";\r\nimport { useMutation, gql } from \"@apollo/client\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  FormControl,\r\n  FormHelperText,\r\n  TextField,\r\n  Button,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\r\nimport Error from \"../Shared/Error\";\r\nimport { cloudUrl, cloudName, cloudPreset } from \"../../cloudinaryApi\";\r\nimport { GET_TRACKS_QUERY } from \"../../sharedQueries\";\r\n\r\nconst CreateTrack = () => {\r\n  const classes = useStyles();\r\n  const [createTrack, { error }] = useMutation(CREATE_TRACK_MUTATION, {\r\n    update(cache, response) {\r\n      handleUpdateCache(cache, response);\r\n    },\r\n    onCompleted() {\r\n      handleComplete();\r\n    },\r\n  });\r\n  const [open, setOpen] = useState(false);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescritpion] = useState(\"\");\r\n  const [file, setFile] = useState(\"\");\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [fileError, setFileError] = useState(\"\");\r\n\r\n  if (error) return <Error error={error} />;\r\n\r\n  const handleAudioChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    const fileSizeLimit = 10000000; //10mb\r\n    if (selectedFile && selectedFile.size > fileSizeLimit) {\r\n      setFileError(`${selectedFile.name}: File size too large, 10mb max.`);\r\n    } else {\r\n      setFile(selectedFile);\r\n      setFileError(\"\");\r\n    }\r\n  };\r\n\r\n  const handleUpdateCache = (cache, { data: { createTrack } }) => {\r\n    const data = cache.readQuery({\r\n      query: GET_TRACKS_QUERY,\r\n    });\r\n    const tracks = data.tracks.concat(createTrack.track);\r\n    cache.writeQuery({\r\n      query: GET_TRACKS_QUERY,\r\n      data: { tracks },\r\n    });\r\n  };\r\n\r\n  const handleAudioUpload = async () => {\r\n    const data = new FormData();\r\n    try {\r\n      data.append(\"file\", file);\r\n      data.append(\"resource_type\", \"raw\");\r\n      data.append(\"upload_preset\", cloudPreset);\r\n      data.append(\"cloud_name\", cloudName);\r\n      const res = await axios.post(cloudUrl, data);\r\n      return res.data.url;\r\n    } catch (e) {\r\n      console.error(\"Error with cloudinary \" + e);\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleComplete = () => {\r\n    setOpen(false);\r\n    setSubmitting(false);\r\n    setTitle(\"\");\r\n    setDescritpion(\"\");\r\n    setFile(\"\");\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setSubmitting(true);\r\n    const url = await handleAudioUpload();\r\n    createTrack({ variables: { title, description, url } });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={() => {\r\n          setOpen(true);\r\n        }}\r\n        variant=\"outlined\"\r\n        className={classes.fab}\r\n        color=\"secondary\"\r\n      >\r\n        {open ? <ClearIcon /> : <AddIcon />}\r\n      </Button>\r\n      <Dialog open={open} className={classes.dialog}>\r\n        <form\r\n          onSubmit={(e) => {\r\n            handleSubmit(e);\r\n          }}\r\n        >\r\n          <DialogTitle>Create Track</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText component=\"span\">\r\n              Add a Title, Description and Audio File\r\n              <FormControl fullWidth>\r\n                <TextField\r\n                  label=\"Title\"\r\n                  placeholder=\"Add Title\"\r\n                  className={classes.textField}\r\n                  onChange={(e) => {\r\n                    setTitle(e.target.value);\r\n                  }}\r\n                  value={title}\r\n                />\r\n              </FormControl>\r\n              <FormControl fullWidth>\r\n                <TextField\r\n                  multiline\r\n                  row=\"2\"\r\n                  label=\"Description\"\r\n                  placeholder=\"Add Description\"\r\n                  className={classes.textField}\r\n                  onChange={(e) => {\r\n                    setDescritpion(e.target.value);\r\n                  }}\r\n                  value={description}\r\n                />\r\n              </FormControl>\r\n              <FormControl fullWidth error={fileError !== \"\"}>\r\n                <input\r\n                  id=\"audio\"\r\n                  required\r\n                  type=\"file\"\r\n                  className={classes.input}\r\n                  accept=\"audio/mp3,audio/wav\"\r\n                  onChange={handleAudioChange}\r\n                />\r\n                <label htmlFor=\"audio\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color={file ? \"secondary\" : \"inherit\"}\r\n                    component=\"span\"\r\n                    className={classes.button}\r\n                  >\r\n                    Audio File\r\n                    <LibraryMusicIcon className={classes.icon} />\r\n                  </Button>\r\n                  {file && file.name}\r\n                </label>\r\n                <FormHelperText>{fileError}</FormHelperText>\r\n              </FormControl>\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={() => {\r\n                setOpen(false);\r\n              }}\r\n              className={classes.cancel}\r\n              disabled={submitting}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              disabled={\r\n                submitting || !title.trim() || !description.trim() || !file\r\n              }\r\n              type=\"submit\"\r\n              className={classes.save}\r\n            >\r\n              {submitting ? (\r\n                <CircularProgress size={24} className={classes.save} />\r\n              ) : (\r\n                \"Add Track\"\r\n              )}\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nconst CREATE_TRACK_MUTATION = gql`\r\n  mutation($title: String!, $description: String!, $url: String!) {\r\n    createTrack(title: $title, description: $description, url: $url) {\r\n      track {\r\n        id\r\n        title\r\n        description\r\n        url\r\n        likes {\r\n          id\r\n        }\r\n        postedBy {\r\n          id\r\n          username\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  dialog: {\r\n    margin: \"0 auto\",\r\n    maxWidth: 550,\r\n  },\r\n  textField: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  cancel: {\r\n    color: \"red\",\r\n  },\r\n  save: {\r\n    color: \"green\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing.unit * 2,\r\n  },\r\n  icon: {\r\n    marginLeft: theme.spacing.unit,\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  fab: {\r\n    position: \"fixed\",\r\n    bottom: theme.spacing.unit * 2,\r\n    right: theme.spacing.unit * 2,\r\n    zIndex: \"200\",\r\n  },\r\n}));\r\n\r\nexport default CreateTrack;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nconst Loading = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress className={classes.progress} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100vw\",\r\n    textAlign: \"center\",\r\n  },\r\n  progress: {\r\n    margin: theme.spacing.unit * 2,\r\n    color: theme.palette.secondary.dark,\r\n  },\r\n}));\r\n\r\nexport default Loading;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SearchTracks from \"../components/Track/SearchTracks\";\r\nimport TrackList from \"../components/Track/TrackList\";\r\nimport CreateTrack from \"../components/Track/CreateTrack\";\r\nimport Loading from \"../components/Shared/Loading\";\r\nimport Error from \"../components/Shared/Error\";\r\nimport { GET_TRACKS_QUERY } from \"../sharedQueries\";\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [tracks, setTracks] = useState([]);\r\n  const { loading, error, data } = useQuery(GET_TRACKS_QUERY);\r\n\r\n  useEffect(() => {\r\n    if (searchResults.length > 0) {\r\n      setTracks(searchResults);\r\n    } else if (data) {\r\n      setTracks(data.tracks);\r\n    }\r\n  }, [searchResults, data]);\r\n\r\n  if (loading) return <Loading />;\r\n  if (error) return <Error error={error} />;\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <SearchTracks setSearchResults={setSearchResults} />\r\n      <CreateTrack />\r\n      <TrackList tracks={tracks} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    margin: \"0 auto\",\r\n    maxWidth: 960,\r\n    padding: theme.spacing.unit * 2,\r\n  },\r\n}));\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useQuery, gql } from \"@apollo/client\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Avatar,\r\n  Paper,\r\n  Typography,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\nimport AudiotrackIcon from \"@material-ui/icons/Audiotrack\";\r\nimport AudioPlayer from \"../components/Shared/AudioPlayer\";\r\nimport Error from \"../components/Shared/Error\";\r\nimport Loading from \"../components/Shared/Loading\";\r\n\r\nconst Profile = ({ match }) => {\r\n  const classes = useStyles();\r\n  const { loading, error, data } = useQuery(GET_PROFILE, {\r\n    variables: { id: match.params.id },\r\n  });\r\n  if (loading) return <Loading />;\r\n  if (error) return <Error error={error} />;\r\n  return (\r\n    <div>\r\n      <Card className={classes.card}>\r\n        <CardHeader\r\n          avatar={<Avatar>{data.user.username[0]}</Avatar>}\r\n          title={data.user.username}\r\n          subheader={`Joined ${new Date(data.user.dateJoined)\r\n            .toISOString()\r\n            .substring(0, 10)}`}\r\n        />\r\n      </Card>\r\n      <Paper elevation={1} className={classes.paper}>\r\n        <Typography variant=\"subtitle1\" className={classes.title}>\r\n          <AudiotrackIcon className={classes.audioIcon} />\r\n          Created Tracks\r\n        </Typography>\r\n        {data.user.trackSet.map((track) => (\r\n          <div key={track.id}>\r\n            <Typography>\r\n              {track.title} - {track.likes.length} Likes\r\n            </Typography>\r\n            <AudioPlayer url={track.url} />\r\n            <Divider className={classes.divider} />\r\n          </div>\r\n        ))}\r\n      </Paper>\r\n      <Paper elevation={1} className={classes.paper}>\r\n        <Typography variant=\"subtitle1\" className={classes.title}>\r\n          <ThumbUpIcon className={classes.thumbIcon} />\r\n          Liked Tracks\r\n        </Typography>\r\n        {data.user.likeSet.map(({ track }) => {\r\n          return (\r\n            <div key={track.id}>\r\n              <Typography>\r\n                {track.title} - {track.likes.length} Likes -{\" \"}\r\n                {track.postedBy.username}\r\n              </Typography>\r\n              <AudioPlayer url={track.url} />\r\n              <Divider className={classes.divider} />\r\n            </div>\r\n          );\r\n        })}\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst GET_PROFILE = gql`\r\n  query($id: Int!) {\r\n    user(id: $id) {\r\n      id\r\n      username\r\n      dateJoined\r\n      trackSet {\r\n        id\r\n        title\r\n        url\r\n        likes {\r\n          id\r\n        }\r\n      }\r\n      likeSet {\r\n        id\r\n        track {\r\n          id\r\n          title\r\n          url\r\n          likes {\r\n            id\r\n          }\r\n          postedBy {\r\n            id\r\n            username\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    width: \"auto\",\r\n    display: \"block\",\r\n    padding: theme.spacing.unit * 2,\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    marginTop: theme.spacing.unit * 2,\r\n    marginBottom: theme.spacing.unit * 2,\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: 650,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  card: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  title: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginBottom: theme.spacing.unit * 2,\r\n  },\r\n  audioIcon: {\r\n    color: \"purple\",\r\n    fontSize: 30,\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  thumbIcon: {\r\n    color: \"green\",\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  divider: {\r\n    marginTop: theme.spacing.unit,\r\n    marginBottom: theme.spacing.unit,\r\n  },\r\n}));\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { ApolloConsumer } from \"@apollo/client\";\r\nimport { IS_USER_LOGGED_IN } from \"../../sharedQueries\";\r\nimport ExitToApp from \"@material-ui/icons/ExitToApp\";\r\nimport { Typography, Button } from \"@material-ui/core\";\r\n\r\nconst Signout = () => {\r\n  const classes = useStyles();\r\n  const handleSignout = async (client) => {\r\n    localStorage.removeItem(\"authToken\");\r\n    client.writeQuery({\r\n      query: IS_USER_LOGGED_IN,\r\n      data: {\r\n        isLoggedIn: false,\r\n      },\r\n    });\r\n  };\r\n  return (\r\n    <ApolloConsumer>\r\n      {(client) => (\r\n        <Button\r\n          onClick={() => {\r\n            handleSignout(client);\r\n          }}\r\n        >\r\n          <Typography\r\n            variant=\"body1\"\r\n            className={classes.buttonIcon}\r\n            color=\"secondary\"\r\n          >\r\n            Signout\r\n          </Typography>\r\n          <ExitToApp className={classes.buttonIcon} color=\"secondary\" />\r\n        </Button>\r\n      )}\r\n    </ApolloConsumer>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    cursor: \"pointer\",\r\n    display: \"flex\",\r\n  },\r\n  buttonIcon: {\r\n    marginLeft: \"5px\",\r\n  },\r\n}));\r\n\r\nexport default Signout;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\";\r\nimport RadioIcon from \"@material-ui/icons/Radio\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Signout from \"../Auth/Signout\";\r\n\r\nconst Header = ({ currentUser }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <AppBar position=\"static\" className={classes.root}>\r\n      <Toolbar>\r\n        <Link to=\"/\" className={classes.grow}>\r\n          <RadioIcon className={classes.logo} color=\"secondary\" />\r\n          <Typography variant=\"h3\" color=\"secondary\" noWrap>\r\n            Musicallen\r\n          </Typography>\r\n        </Link>\r\n        {currentUser && (\r\n          <Link to={`/profile/${currentUser.id}`} className={classes.grow}>\r\n            <AccountCircleIcon className={classes.faceIcon} />\r\n            <Typography variant=\"h3\" className={classes.username} noWrap>\r\n              {currentUser.username}\r\n            </Typography>\r\n          </Link>\r\n        )}\r\n        <Signout />\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    textDecoration: \"none\",\r\n  },\r\n  logo: {\r\n    marginRight: theme.spacing.unit,\r\n    fontSize: 45,\r\n  },\r\n  faceIcon: {\r\n    marginRight: theme.spacing.unit,\r\n    fontSize: 30,\r\n    color: \"white\",\r\n  },\r\n  username: {\r\n    color: \"white\",\r\n    fontSize: 30,\r\n  },\r\n}));\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport withRoot from \"./withRoot\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport App from \"./pages/App\";\r\nimport Profile from \"./pages/Profile\";\r\nimport Header from \"./components/Shared/Header\";\r\nimport Loading from \"./components/Shared/Loading\";\r\nimport Error from \"./components/Shared/Error\";\r\nimport { GET_ME_QUERY } from \"./sharedQueries\";\r\n\r\nexport const UserContext = React.createContext();\r\n\r\nconst Root = () => {\r\n  const { loading, error, data } = useQuery(GET_ME_QUERY, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  if (loading) return <Loading />;\r\n  if (error) return <Error error={error} />;\r\n  return (\r\n    <Router>\r\n      <UserContext.Provider value={data.me}>\r\n        <Header currentUser={data.me} />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={App} />\r\n          <Route path=\"/profile/:id\" component={Profile} />\r\n        </Switch>\r\n      </UserContext.Provider>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default withRoot(Root);\r\n","import React, { useState } from \"react\";\r\nimport { useMutation, gql } from \"@apollo/client\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Typography,\r\n  Avatar,\r\n  FormControl,\r\n  Paper,\r\n  Input,\r\n  InputLabel,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { Lock } from \"@material-ui/icons\";\r\nimport Error from \"../Shared/Error\";\r\nimport { IS_USER_LOGGED_IN } from \"../../sharedQueries\";\r\n\r\nconst Login = ({ setIsLogin }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const classes = useStyles();\r\n  const [loginUser, { loading, error, client }] = useMutation(LOGIN_MUTATION);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await loginUser({\r\n        variables: { password, username },\r\n      });\r\n      localStorage.setItem(\"authToken\", res.data.tokenAuth.token);\r\n      client.writeQuery({\r\n        query: IS_USER_LOGGED_IN,\r\n        data: { isLoggedIn: true },\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <Lock />\r\n        </Avatar>\r\n        <Typography variant=\"h4\">Login as Existing User</Typography>\r\n        <form\r\n          className={classes.form}\r\n          onSubmit={(e) => {\r\n            handleSubmit(e);\r\n          }}\r\n        >\r\n          <FormControl margin=\"normal\" required fullWidth>\r\n            <InputLabel htmlFor=\"username\">Username</InputLabel>\r\n            <Input\r\n              id=\"username\"\r\n              onChange={(e) => {\r\n                setUsername(e.target.value);\r\n              }}\r\n            />\r\n          </FormControl>\r\n          <FormControl margin=\"normal\" required fullWidth>\r\n            <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n            <Input\r\n              id=\"password\"\r\n              type=\"password\"\r\n              onChange={(e) => {\r\n                setPassword(e.target.value);\r\n              }}\r\n            />\r\n          </FormControl>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            disabled={loading || !username.trim() || !password.trim()}\r\n            className={classes.submit}\r\n          >\r\n            {loading ? \"Logging in...\" : \"Login\"}\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              setIsLogin(false);\r\n            }}\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n          >\r\n            New user? Register here.\r\n          </Button>\r\n          {loading && <p>Loading...</p>}\r\n          {error && <Error error={error.toString()} />}\r\n        </form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst LOGIN_MUTATION = gql`\r\n  mutation($username: String!, $password: String!) {\r\n    tokenAuth(username: $username, password: $password) {\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"auto\",\r\n    display: \"block\",\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: 400,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing.unit * 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing.unit * 2,\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing.unit * 2,\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing.unit,\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing.unit,\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing.unit * 2,\r\n    marginBottom: theme.spacing.unit * 2,\r\n  },\r\n}));\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { useMutation, gql } from \"@apollo/client\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Typography,\r\n  Avatar,\r\n  FormControl,\r\n  Paper,\r\n  Input,\r\n  InputLabel,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Slide,\r\n} from \"@material-ui/core\";\r\nimport { Gavel, VerifiedUserTwoTone } from \"@material-ui/icons\";\r\nimport Error from \"../Shared/Error\";\r\n\r\nconst Transition = React.forwardRef((props, ref) => {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst Register = ({ setIsLogin }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n  const classes = useStyles();\r\n  const [createUser, { loading, error }] = useMutation(REGISTER_MUTATION);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await createUser({\r\n        variables: { email, password, username },\r\n      });\r\n      setOpen(true);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <Gavel />\r\n        </Avatar>\r\n        <Typography variant=\"h4\">Register</Typography>\r\n        <form\r\n          className={classes.form}\r\n          onSubmit={(e) => {\r\n            handleSubmit(e);\r\n          }}\r\n        >\r\n          <FormControl margin=\"normal\" required fullWidth>\r\n            <InputLabel htmlFor=\"username\">Username</InputLabel>\r\n            <Input\r\n              id=\"username\"\r\n              onChange={(e) => {\r\n                setUsername(e.target.value);\r\n              }}\r\n            />\r\n          </FormControl>\r\n          <FormControl margin=\"normal\" required fullWidth>\r\n            <InputLabel htmlFor=\"email\">Email</InputLabel>\r\n            <Input\r\n              id=\"email\"\r\n              type=\"email\"\r\n              onChange={(e) => {\r\n                setEmail(e.target.value);\r\n              }}\r\n            />\r\n          </FormControl>\r\n          <FormControl margin=\"normal\" required fullWidth>\r\n            <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n            <Input\r\n              id=\"password\"\r\n              type=\"password\"\r\n              onChange={(e) => {\r\n                setPassword(e.target.value);\r\n              }}\r\n            />\r\n          </FormControl>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            disabled={\r\n              loading || !username.trim() || !email.trim() || !password.trim()\r\n            }\r\n            className={classes.submit}\r\n          >\r\n            {loading ? \"Registering...\" : \"Register\"}\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              setIsLogin(true);\r\n            }}\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n          >\r\n            Previous user? Login in here.\r\n          </Button>\r\n          {loading && <p>Loading...</p>}\r\n          {error && <Error error={error.toString()} />}\r\n        </form>\r\n      </Paper>\r\n      {/***Success Dialog***/}\r\n      <Dialog disableBackdropClick open={open} TransitionComponent={Transition}>\r\n        <DialogTitle>\r\n          <VerifiedUserTwoTone className={classes.icon} />\r\n          New Account\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            User {username} successfully created!\r\n          </DialogContentText>\r\n          <DialogActions>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={() => {\r\n                setIsLogin(true);\r\n              }}\r\n            >\r\n              Login\r\n            </Button>\r\n            {/***Error ***/}\r\n            {error && <div>Error</div>}\r\n          </DialogActions>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst REGISTER_MUTATION = gql`\r\n  mutation($username: String!, $email: String!, $password: String!) {\r\n    createUser(username: $username, email: $email, password: $password) {\r\n      user {\r\n        username\r\n        email\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"auto\",\r\n    display: \"block\",\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: 400,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing.unit * 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing.unit * 2,\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing.unit * 2,\r\n    color: theme.palette.openTitle,\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing.unit,\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing.unit,\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing.unit * 2,\r\n    marginBottom: theme.spacing.unit * 2,\r\n  },\r\n  icon: {\r\n    padding: \"0px 2px 2px 0px\",\r\n    verticalAlign: \"middle\",\r\n    color: \"green\",\r\n  },\r\n}));\r\n\r\nexport default Register;\r\n","import React, { useState } from \"react\";\r\n\r\nimport withRoot from \"../../withRoot\";\r\nimport Login from \"./Login\";\r\nimport Register from \"./Register\";\r\n\r\nexport default withRoot(() => {\r\n  const [isLogin, setIsLogin] = useState(false);\r\n  return isLogin ? (\r\n    <Login setIsLogin={setIsLogin} />\r\n  ) : (\r\n    <Register setIsLogin={setIsLogin} />\r\n  );\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Root from \"./Root\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { IS_USER_LOGGED_IN } from \"./sharedQueries\";\r\nimport Auth from \"./components/Auth\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport {\r\n  ApolloProvider,\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  createHttpLink,\r\n} from \"@apollo/client\";\r\nimport { setContext } from \"@apollo/client/link/context\";\r\n\r\nconst cache = new InMemoryCache();\r\nconst httpLink = createHttpLink({\r\n  uri: \"http://157.230.238.148/graphql/\",\r\n});\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = localStorage.getItem(\"authToken\");\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `JWT ${token}` : \"\",\r\n    },\r\n  };\r\n});\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache,\r\n});\r\n\r\ncache.writeQuery({\r\n  query: IS_USER_LOGGED_IN,\r\n  data: {\r\n    isLoggedIn: !!localStorage.getItem(\"authToken\"),\r\n  },\r\n});\r\n\r\nconst AuthCheckComponent = (props) => {\r\n  const { data } = useQuery(IS_USER_LOGGED_IN);\r\n  return data.isLoggedIn ? <Root /> : props.children;\r\n};\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <AuthCheckComponent>\r\n      <Auth />\r\n    </AuthCheckComponent>\r\n  </ApolloProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}